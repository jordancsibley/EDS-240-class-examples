---
title: "week2-discussion"
subtitle: "Recreating the USDM visualization (graphic form)"
format: html
date: last-modified
author: "Jordan Sibley"
---

## Set Up & Data 

1. Begin by copying the following setup and data wrangling code into your week2-discussion.qmd file. Run through and review the code, and explore the resulting drought_clean data frame.

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(tidyverse)

#..........................import data...........................
drought <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2021/2021-07-20/drought.csv')

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                            wrangle drought data                          ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

drought_clean <- drought |>

  # select cols of interest & update names for clarity (as needed) ----
  select(date = valid_start, state_abb, drought_lvl, area_pct) |> 

  # add year, month & day cols using {lubridate} fxns ----
  # NOTE: this step isn't necessary for our plot, but I'm including as examples of how to extract different date elements from a object of class `Date` using {lubridate} ----
  mutate(year = year(date),
         month = month(date, label = TRUE, abbr = TRUE),
         day = day(date)) |>

  # add drought level conditions names ----
  mutate(drought_lvl_long = factor(drought_lvl,
                            levels = c("D4", "D3", "D2", "D1","D0", "None"),
                            labels = c("(D4) Exceptional", "(D3) Extreme",
                                       "(D2) Severe", "(D1) Moderate", 
                                       "(D0) Abnormally Dry", 
                                       "No Drought"))) |>
  
  # reorder cols ----
  relocate(date, year, month, day, state_abb, drought_lvl, drought_lvl_long, area_pct)
```

2. We still need to filter for just California data and remove any observations where drought_lvl is "None". It makes some sense to perform these filters separate from our data wrangling code (in case we ever want to use drought_clean to make a similar plot for a different state(s)). Letâ€™s filter drought_clean, then pipe directly into our gpplot:

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##       create stacked area plot of CA drought conditions through time     ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

drought_clean |> 
  
  # remove drought_lvl "None" & filter for just CA ----
  filter(drought_lvl != "None",
         state_abb == "CA") |> 
  # stacked area chart filled by drought level 
  ggplot(aes(x = date, y = area_pct, fill = drought_lvl_long)) +
  
  # Reverse order of the groups so that level D4 is closest to x axis 
  geom_area(position = position_stack(reverse = TRUE)) + 
  
  #Update the colors 
  scale_fill_manual(values = c('#853904', '#FF0000', '#FFC100', '#FFD965', '#FFF000')) +
  
  # Adjust x-axis breaks 
  scale_x_date(breaks = scales::breaks_pretty(n = 10),
               expand = c(0,0)) + 
  
  # Adjust y axis breaks and add percent sign 
  scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
                     labels = scales::label_percent(scale =1), 
                     expand = c(0,0)) + # Removes the buffer of data
  
  # Update the plot title 
  labs(title = "Drought area in California")
 
```

We will update the rest of the theme things in a few weeks! 

